define(`forloop',`pushdef(`$1', `$2')_forloop(`$1', `$2', `$3', `$4')popdef(`$1')')dnl
define(`_forloop',`$4`'ifelse($1, `$3', ,`define(`$1', incr($1))_forloop(`$1', `$2', `$3', `$4')')')dnl
define(`outputwindow',
`  '<div class='col-lg-4'>
    <div class='row'>
      <div class='col-lg-12 text-center' id='Bench$1vs'></div>
      <div class='col-lg-12 text-center legend' id='BL$1vs'></div>
    </div>
  </div>
  <div class='col-lg-4'>
    <div class='row'>
      <div class='col-lg-12 text-center' id='Bench$1llvm'></div>
      <div class='col-lg-12 text-center legend' id='BL$1llvm'></div>
    </div>
  </div>
  <div class='col-lg-4'>
    <div class='row'>
      <div class='col-lg-12 text-center' id='Bench$1tiled'></div>
      <div class='col-lg-12 text-center legend' id='BL$1tiled'></div>
    </div>
  </div>

)dnl
<div class='row trunk-section'>
define(`m4_max_outputwindow_id', 99)dnl
forloop(`i', 0, m4_max_outputwindow_id, `outputwindow(i)')dnl
</div>
<script>
MG._hooks = {};

d3.json('http://localhost:8000/benchmarks/', function(error, data) {
  if (error) {
    MG.data_graphic({
      title: "Missing Data",
      description: "Data is currently missing.",
      error: 'Cannot access backend server.',
      chart_type: 'missing-data',
      missing_text: 'No data loaded. Please make sure backend is up at localhost:8000',
      target: '#Bench0',
      width: 600,
      height: 200
    });
    return
  }
  // no benchmark found
  if (data.lengh == 0) {
    MG.data_graphic({
      title: "Empty Database",
      description: "Database is empty.",
      error: 'No renderable data',
      chart_type: 'missing-data',
      missing_text: 'Database is empty; please upload some measurements using uploader/upload_stats.py',
      target: '#Bench0',
      width: 600,
      height: 200
    });
    return
  }

  limit = m4_max_outputwindow_id + 1;
  if (data.length > limit) {
    s = data[limit]['benchmarkname']
    for (j = limit + 1; j < data.length; j++) {
      s = s + ", " + data[j]['benchmarkname']
    }

    window.alert(
      "Right now we plot the first " + limit.toString() + " benchmarks. " +
      "The following benchmarks are not plotted: " + s)
  }
  var keys = [
    ['rawcycles', 'Raw Cycles'],
    ['insfetched', 'Ins. Fetched'],
    ['insexeced',  'Ins. Executed'],
    ['blkfetched',  'Blk. Fetched'],
    ['blkexeced',  'Blk. Executed'],
  ];

  var tags = [
    ['vs', 'Visual Studio'],
    ['llvm', 'LLVM'],
    ['tiled', 'Tiled'],
  ];

  var suite = 'templatesuitename';

  // for each benchmark
  for (i = 0, render_target = 0; i <  data.length ; i++) {
    if (data[i]['measurements'].length == 0) {
      continue;
    }
    var rendered_tags = 0;
    // for each supported tag
    for (var tag_idx = 0; tag_idx < tags.length; tag_idx ++) {
      var tag = tags[tag_idx][0];
      // convert details to MG format, or list of lists
      var details = [];
      for (var key_idx = 0; key_idx < keys.length; key_idx ++) {
        var key = keys[key_idx][0];

        details[key_idx] = [];
        for (j = 0, k = 0; j < data[i]['measurements'].length; j++) {
          measurement_tag = data[i]['measurements'][j]['tags'];
          console.log(measurement_tag);
          if (measurement_tag.indexOf(tag) == -1)
            continue;
          if (suite != 'all' && measurement_tag.indexOf(suite) == -1)
            continue;
          details[key_idx][k] = {
            'date': data[i]['measurements'][j]['created'],
            'value': data[i]['measurements'][j][key]
          };
          k ++;
        }
      }
      benchmark_name = data[i]['benchmarkname'];
      // We have the benchmark, but lack of matching tag..
      if (details[0].length == 0) {
        if (rendered_tags == 0 && suite != "all")
          continue;
        MG.data_graphic({
          title: "Missing data with tag: "+tag.toString,
          description: "Data is currently missing.",
          error: benchmark_name + ' does not have data with tag '+tag.toString(),
          chart_type: 'missing-data',
          missing_text: benchmark_name + ' does not have data with tag \''+tag.toString()+'\'',
          width: 390,
          height: 270, // missing data chart doesn't have legends; must make it slightly taller than normal ones
          right: 40,
          target: '#Bench' + render_target.toString() + tag.toString(),
          legend: blegends,
          legend_target: '#BL' + render_target.toString() + tag.toString(),
          });
      } else {
        rendered_tags ++;
        for (j = 0; j < details.length; j++) {
          details[j] = MG.convert.date(details[j], 'date');
        }

        //console.log(benchmark_name);

        var blegends = [];

        for (j = 0; j<keys.length; j++) {
          blegends[j] = keys[j][1];
        }


        MG.data_graphic({
          title: "Details of " + benchmark_name + " ("+ tags[tag_idx][1]+")",
          description: benchmark_name,
          data: details,
          width: 390,
          height: 200,
          right: 40,
          target: '#Bench' + render_target.toString() + tag.toString(),
          legend: blegends,
          legend_target: '#BL' + render_target.toString() + tag.toString(),
          linked: true,
        });
      }
    }
    render_target++;
  }
  /* Speedup
  for (i = 0; i < data.length; i++) {
    benchmark_name = data[i]['benchmarkname']
    data1 = MG.convert.date(data[i]['measurements'], 'created');
    console.log(data)
    console.log(benchmark_name)

    MG.data_graphic({
        title: "Speedup of " + benchmark_name,
        description: benchmark_name,
        data: data1,
        width: 600,
        height: 200,
        right: 40,
        target: '#Bench' + i.toString(),
        x_accessor: 'created',
        y_accessor: 'speedup'
    });
  }
  */
});
</script>
